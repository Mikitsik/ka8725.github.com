I"…@<p>If you havenâ€™t noticed yet that main rule in rails development says do not complicate logic in controller I recommend you to read these articles:</p>

<ul>
  <li><a href="http://weblog.jamisbuck.org/2006/10/18/skinny-controller-fat-model">Skinny controller, fat model</a></li>
  <li><a href="http://blog.jayfields.com/2006/09/rails-model-view-controller-presenter.html">Rails Model View Controller + Presenter?</a></li>
</ul>

<p>This post assumes that youâ€™ve already known this truth and itâ€™s not necessary to clarify it for you. Also I assume that you know what is <a href="https://peepcode.com/products/rest-for-rails-2">REST</a> and those idea that you should follow <a href="https://peepcode.com/products/rest-for-rails-2">RESTful</a> rules. I will show you how to avoid writting boring repetitive code in controllers.</p>

<h2 id="boring-code">Boring code</h2>

<p>Imagine you have controller:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">class</span> <span class="nc">ChannelsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="k">def</span> <span class="nf">index</span>
    <span class="vi">@channels</span> <span class="o">=</span> <span class="n">current_user</span><span class="p">.</span><span class="nf">channels</span>
    <span class="n">respond_with</span><span class="p">(</span><span class="vi">@channels</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">new</span>
    <span class="vi">@channel</span> <span class="o">=</span> <span class="n">current_user</span><span class="p">.</span><span class="nf">channels</span><span class="p">.</span><span class="nf">build</span>
    <span class="n">respond_with</span><span class="p">(</span><span class="vi">@channel</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">create</span>
    <span class="vi">@channel</span> <span class="o">=</span> <span class="n">current_user</span><span class="p">.</span><span class="nf">channels</span><span class="p">.</span><span class="nf">build</span><span class="p">(</span><span class="n">params</span><span class="p">[</span><span class="ss">:channel</span><span class="p">])</span>
    <span class="vi">@channel</span><span class="p">.</span><span class="nf">save</span>
    <span class="n">respond_with</span><span class="p">(</span><span class="vi">@channel</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">show</span>
    <span class="vi">@channel</span> <span class="o">=</span> <span class="n">current_user</span><span class="p">.</span><span class="nf">channels</span><span class="p">.</span><span class="nf">find</span><span class="p">(</span><span class="n">params</span><span class="p">[</span><span class="ss">:id</span><span class="p">])</span>
    <span class="n">respond_with</span><span class="p">(</span><span class="vi">@channel</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">edit</span>
    <span class="vi">@channel</span> <span class="o">=</span> <span class="n">current_user</span><span class="p">.</span><span class="nf">channels</span><span class="p">.</span><span class="nf">find</span><span class="p">(</span><span class="n">params</span><span class="p">[</span><span class="ss">:id</span><span class="p">])</span>
    <span class="n">respond_with</span><span class="p">(</span><span class="vi">@channel</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">update</span>
    <span class="vi">@channel</span> <span class="o">=</span> <span class="n">current_user</span><span class="p">.</span><span class="nf">channels</span><span class="p">.</span><span class="nf">find</span><span class="p">(</span><span class="n">params</span><span class="p">[</span><span class="ss">:id</span><span class="p">])</span>
    <span class="vi">@channel</span><span class="p">.</span><span class="nf">update_attributes</span><span class="p">(</span><span class="n">params</span><span class="p">[</span><span class="ss">:channel</span><span class="p">])</span>
    <span class="n">respond_with</span><span class="p">(</span><span class="vi">@channel</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="kp">private</span>
  <span class="k">def</span> <span class="nf">current_user</span>
    <span class="vi">@current_user</span> <span class="o">||=</span> <span class="no">User</span><span class="p">.</span><span class="nf">find</span><span class="p">(</span><span class="n">params</span><span class="p">[</span><span class="ss">:user_id</span><span class="p">])</span>
  <span class="k">end</span>
<span class="k">end</span></code></pre></figure>

<p>This code is looking pretty nice. But it contains a lot of repetitive code such as: <code class="highlighter-rouge">current_user.channels.find(params[:id])</code>, <code class="highlighter-rouge">respond_with</code> and so on. Of cource you can write before filters to avoid this collision like this:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">class</span> <span class="nc">ChannelsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="n">before_filter</span> <span class="ss">:find_channel</span><span class="p">,</span> <span class="ss">:only</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="ss">:edit</span><span class="p">,</span> <span class="ss">:show</span><span class="p">,</span> <span class="ss">:update</span><span class="p">]</span>

  <span class="k">def</span> <span class="nf">index</span>
    <span class="vi">@channels</span> <span class="o">=</span> <span class="n">current_user</span><span class="p">.</span><span class="nf">channels</span>
    <span class="n">respond_with</span><span class="p">(</span><span class="vi">@channels</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">new</span>
    <span class="vi">@channel</span> <span class="o">=</span> <span class="n">current_user</span><span class="p">.</span><span class="nf">channels</span><span class="p">.</span><span class="nf">build</span>
    <span class="n">respond_with</span><span class="p">(</span><span class="vi">@channel</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">create</span>
    <span class="vi">@channel</span> <span class="o">=</span> <span class="n">current_user</span><span class="p">.</span><span class="nf">channels</span><span class="p">.</span><span class="nf">build</span><span class="p">(</span><span class="n">params</span><span class="p">[</span><span class="ss">:channel</span><span class="p">])</span>
    <span class="vi">@channel</span><span class="p">.</span><span class="nf">save</span>
    <span class="n">respond_with</span><span class="p">(</span><span class="vi">@channel</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">show</span>
    <span class="n">respond_with</span><span class="p">(</span><span class="vi">@channel</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">edit</span>
    <span class="n">respond_with</span><span class="p">(</span><span class="vi">@channel</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">update</span>
    <span class="vi">@channel</span><span class="p">.</span><span class="nf">update_attributes</span><span class="p">(</span><span class="n">params</span><span class="p">[</span><span class="ss">:channel</span><span class="p">])</span>
    <span class="n">respond_with</span><span class="p">(</span><span class="vi">@channel</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="kp">private</span>
  <span class="k">def</span> <span class="nf">find_channel</span>
    <span class="vi">@channel</span> <span class="o">=</span> <span class="n">current_user</span><span class="p">.</span><span class="nf">channels</span><span class="p">.</span><span class="nf">find</span><span class="p">(</span><span class="n">params</span><span class="p">[</span><span class="ss">:id</span><span class="p">])</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">current_user</span>
    <span class="vi">@current_user</span> <span class="o">||=</span> <span class="no">User</span><span class="p">.</span><span class="nf">find</span><span class="p">(</span><span class="n">params</span><span class="p">[</span><span class="ss">:user_id</span><span class="p">])</span>
  <span class="k">end</span>
<span class="k">end</span></code></pre></figure>

<p>Looks beter, yes? But itâ€™s possible to write this functionality in 3 (!!!) lines at all. Check it out:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">class</span> <span class="nc">ChannelsController</span> <span class="o">&lt;</span> <span class="no">InheritedResources</span><span class="o">::</span><span class="no">Base</span>
  <span class="n">belong_to</span> <span class="ss">:user</span>
<span class="k">end</span></code></pre></figure>

<p>So, there is no any boring code, itâ€™s really clean controller and you can fill confident that it doesnâ€™t contain any bug, your views work as before and you donâ€™t have to change there anything.
If you are interested in it just insert this line in your <em>Gemfile</em>:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gem 'inherited_resources'
</code></pre></div></div>

<p>and thatâ€™s it. Pay attention that you have to inherit your controllers not from <code class="highlighter-rouge">ApplicationController</code> but from <code class="highlighter-rouge">InheritedResources::Base</code>.</p>

<h2 id="complicated-logic">Complicated logic</h2>

<p>May be youâ€™ve paid attention that <code class="highlighter-rouge">ChannelsController</code> had private method:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>def current_user
  @current_user ||= User.find(params[:user_id])
end
</code></pre></div></div>

<p>which gets current_user for each request, also this controller requires <em>:user_id</em> param. This controller listens to following routes:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>       user_channels GET    /users/:user_id/channels(.:format)              channels#index
                     POST   /users/:user_id/channels(.:format)              channels#create
    new_user_channel GET    /users/:user_id/channels/new(.:format)          channels#new
   edit_user_channel GET    /users/:user_id/channels/:id/edit(.:format)     channels#edit
        user_channel GET    /users/:user_id/channels/:id(.:format)          channels#show
                     PUT    /users/:user_id/channels/:id(.:format)          channels#update
                     DELETE /users/:user_id/channels/:id(.:format)          channels#destroy
</code></pre></div></div>

<p>But what if you donâ€™t want to pass :user_id to every call and all channels should be in current_user scope? Here <code class="highlighter-rouge">current_user</code> is a helper method in <code class="highlighter-rouge">ApplicationController</code> which holds signed in user. Itâ€™s not problem for <code class="highlighter-rouge">inherited_resources</code> gem too:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">class</span> <span class="nc">ChannelsController</span> <span class="o">&lt;</span> <span class="no">InheritedResources</span><span class="o">::</span><span class="no">Base</span>

  <span class="kp">protected</span>
  <span class="k">def</span> <span class="nf">begin_of_association_chain</span>
    <span class="vi">@begin_of_association_chain</span> <span class="o">||=</span> <span class="n">current_user</span>
  <span class="k">end</span>
<span class="k">end</span></code></pre></figure>

<p>It will be enough to get working contoller for our demands. Now you can change your routes:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>       user_channels GET    /user/channels(.:format)              channels#index
                     POST   /user/channels(.:format)              channels#create
    new_user_channel GET    /user/channels/new(.:format)          channels#new
   edit_user_channel GET    /user/channels/:id/edit(.:format)     channels#edit
        user_channel GET    /user/channels/:id(.:format)          channels#show
                     PUT    /user/channels/:id(.:format)          channels#update
                     DELETE /user/channels/:id(.:format)          channels#destroy
</code></pre></div></div>

<p>Letâ€™s complicate logic and rework our controller to listen to both variants of routes:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>       user_channels GET    /user/channels(.:format)              channels#index
                     POST   /user/channels(.:format)              channels#create
    new_user_channel GET    /user/channels/new(.:format)          channels#new
   edit_user_channel GET    /user/channels/:id/edit(.:format)     channels#edit
        user_channel GET    /user/channels/:id(.:format)          channels#show
                     PUT    /user/channels/:id(.:format)          channels#update
                     DELETE /user/channels/:id(.:format)          channels#destroy
       user_channels GET    /users/:user_id/channels(.:format)              channels#index
                     POST   /users/:user_id/channels(.:format)              channels#create
    new_user_channel GET    /users/:user_id/channels/new(.:format)          channels#new
   edit_user_channel GET    /users/:user_id/channels/:id/edit(.:format)     channels#edit
        user_channel GET    /users/:user_id/channels/:id(.:format)          channels#show
                     PUT    /users/:user_id/channels/:id(.:format)          channels#update
                     DELETE /users/:user_id/channels/:id(.:format)          channels#destroy
</code></pre></div></div>

<p>How to change our <code class="highlighter-rouge">ChannelController</code>? Very simple:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">class</span> <span class="nc">ChannelsController</span> <span class="o">&lt;</span> <span class="no">InheritedResources</span><span class="o">::</span><span class="no">Base</span>

  <span class="kp">protected</span>
  <span class="k">def</span> <span class="nf">begin_of_association_chain</span>
    <span class="vi">@begin_of_association_chain</span> <span class="o">||=</span> <span class="p">(</span><span class="no">User</span><span class="p">.</span><span class="nf">find_by_id</span><span class="p">(</span><span class="n">params</span><span class="p">[</span><span class="ss">:user_id</span><span class="p">])</span> <span class="o">||</span> <span class="n">current_user</span><span class="p">)</span> <span class="o">||</span> <span class="k">raise</span><span class="p">(</span><span class="no">ActiveRecord</span><span class="o">::</span><span class="no">RecordNotFound</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span></code></pre></figure>

<p>This way we have universal RESTful controller and we fit it in 6 lines of code instead of 100 or may be 200.</p>

<h2 id="resources">Resources</h2>

<p>Check out <a href="https://github.com/josevalim/inherited_resources">InheritedResources gem</a> and read its README. I promise you will find there a lot of interesting information which Iâ€™ve omited in my post. Also README is not contained information for all possibilities, so I would recommend you to read sources.</p>

<p>I hope you donâ€™t blame me for your spent time. Thank you for your reading!</p>

<p>PS. <em>InheritedResources</em> is  compatible with <a href="https://github.com/ryanb/cancan/wiki/Inherited-Resources">cacan</a>. You have to add one line code <code class="highlighter-rouge">load_and_authorize_resource</code> and your restrictions will work exactly how you want.</p>
:ET