I"4<p>I bet you had an issue with dynamic populating of values for <em>select</em> which depends on a chosen value of other <em>select</em>. For example when I choose the country,  <em>select</em> of the state  should be populated by the states of the chosen country. There are many solutions of this problem. You could find them with Google but none of them  is suitable for me because of bugs or using the approach with caching. I have had this issue again and again and my googling was not successful. Eventually some time ago I invented jQuery library and approach with solves this problem and completely  suits me. This approach assumes that you don’t use javascript frameworks like <em>Ember.js</em> or <em>Angular.js</em>.  In other case, my solution may be needless  in your application.</p>

<h2 id="problem">Problem</h2>

<p>This image will clarify the problem without any words:</p>

<p><img src="/images/select-car.png" alt="Cascading select" /></p>

<h2 id="solution">Solution</h2>

<p>The first thing which I should pay attention to in my solution is a <em>jQuery</em> library:</p>

<blockquote>
  <p>app/assets/javascripts/jquery-dynamic-selectable.coffee</p>
</blockquote>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">$</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">extend</span>
  <span class="nx">dynamicSelectable</span><span class="p">:</span> <span class="o">-&gt;</span>
    <span class="nx">$</span><span class="p">(@).</span><span class="nx">each</span> <span class="p">(</span><span class="nx">i</span><span class="p">,</span> <span class="nx">el</span><span class="p">)</span> <span class="o">-&gt;</span>
      <span class="k">new</span> <span class="nx">DynamicSelectable</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="nx">el</span><span class="p">))</span>

<span class="kd">class</span> <span class="nx">DynamicSelectable</span>
  <span class="kd">constructor</span><span class="p">:</span> <span class="p">(</span><span class="nx">$select</span><span class="p">)</span> <span class="o">-&gt;</span>
    <span class="p">@</span><span class="nd">init</span><span class="p">(</span><span class="nx">$select</span><span class="p">)</span>

  <span class="nx">init</span><span class="p">:</span> <span class="p">(</span><span class="nx">$select</span><span class="p">)</span> <span class="o">-&gt;</span>
    <span class="p">@</span><span class="nd">urlTemplate</span> <span class="o">=</span> <span class="nx">$select</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="dl">'</span><span class="s1">dynamicSelectableUrl</span><span class="dl">'</span><span class="p">)</span>
    <span class="p">@</span><span class="nx">$targetSelect</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="nx">$select</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="dl">'</span><span class="s1">dynamicSelectableTarget</span><span class="dl">'</span><span class="p">))</span>
    <span class="nx">$select</span><span class="p">.</span><span class="nx">on</span> <span class="dl">'</span><span class="s1">change</span><span class="dl">'</span><span class="p">,</span> <span class="o">=&gt;</span>
      <span class="p">@</span><span class="nd">clearTarget</span><span class="p">()</span>
      <span class="nx">url</span> <span class="o">=</span> <span class="p">@</span><span class="nd">constructUrl</span><span class="p">(</span><span class="nx">$select</span><span class="p">.</span><span class="nx">val</span><span class="p">())</span>
      <span class="k">if</span> <span class="nx">url</span>
        <span class="nx">$</span><span class="p">.</span><span class="nx">getJSON</span> <span class="nx">url</span><span class="p">,</span> <span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="o">=&gt;</span>
          <span class="nx">$</span><span class="p">.</span><span class="nx">each</span> <span class="nx">data</span><span class="p">,</span> <span class="p">(</span><span class="nx">index</span><span class="p">,</span> <span class="nx">el</span><span class="p">)</span> <span class="o">=&gt;</span>
            <span class="p">@</span><span class="nx">$targetSelect</span><span class="p">.</span><span class="nx">append</span> <span class="dl">"</span><span class="s2">&lt;option value='#{el.id}'&gt;#{el.name}&lt;/option&gt;</span><span class="dl">"</span>
            <span class="err">#</span> <span class="nx">reinitialize</span> <span class="nx">target</span> <span class="nx">select</span>
          <span class="p">@</span><span class="nd">reinitializeTarget</span><span class="p">()</span>
      <span class="k">else</span>
        <span class="p">@</span><span class="nd">reinitializeTarget</span><span class="p">()</span>

  <span class="nx">reinitializeTarget</span><span class="p">:</span> <span class="o">-&gt;</span>
    <span class="p">@</span><span class="nx">$targetSelect</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="dl">"</span><span class="s2">change</span><span class="dl">"</span><span class="p">)</span>

  <span class="nx">clearTarget</span><span class="p">:</span> <span class="o">-&gt;</span>
    <span class="p">@</span><span class="nx">$targetSelect</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="dl">'</span><span class="s1">&lt;option&gt;&lt;/option&gt;</span><span class="dl">'</span><span class="p">)</span>

  <span class="nx">constructUrl</span><span class="p">:</span> <span class="p">(</span><span class="nx">id</span><span class="p">)</span> <span class="o">-&gt;</span>
    <span class="k">if</span> <span class="nx">id</span> <span class="o">&amp;&amp;</span> <span class="nx">id</span> <span class="o">!=</span> <span class="dl">''</span>
      <span class="p">@</span><span class="nd">urlTemplate</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/:.+_id/</span><span class="p">,</span> <span class="nx">id</span><span class="p">)</span></code></pre></figure>

<p>This peace of code extends jQuery with a <em>dynamicSelectable</em> function which you can call on <em>select</em> which should be listened to change and populate the dependent <em>select</em>. The listened <em>select</em> should has data attributes: <em>selectable-url</em> and <em>selectable-target</em>. Their names explain what they are for:</p>

<p><em>selectable-url</em> - is an url pattern with the model id. For example: <code class="highlighter-rouge">/dynamic_select/:country_id/states</code>. In this case the pattern should be populated with the chosen country id (assuming that we add listener to country’s select) and request will go to this url to get JSON data for populating related <em>select</em>.</p>

<p><em>selectable-target</em> - is a css selector of <em>select</em> which should be populated with given JSON data from the server.</p>

<p>I call <em>dynamicSelectable</em> function for every <em>select</em> on the page which has both data attributes <em>selectable-url</em> and <em>selectable-target</em> simultaneously:</p>

<blockquote>
  <p>app/assets/javascripts/application.coffee</p>
</blockquote>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="p">...</span>
<span class="nx">$</span> <span class="o">-&gt;</span>
  <span class="nx">$</span><span class="p">(</span><span class="dl">'</span><span class="s1">select[data-dynamic-selectable-url][data-dynamic-selectable-target]</span><span class="dl">'</span><span class="p">).</span><span class="nx">dynamicSelectable</span><span class="p">()</span></code></pre></figure>

<p>To make our application workable we should have a controller which will be responsible for the route <code class="highlighter-rouge">/dynamic_select/:country_id/states</code>. Firstly have a look at how I generate route:</p>

<blockquote>
  <p>config/routes.rb</p>
</blockquote>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="o">...</span>
<span class="n">namespace</span> <span class="ss">:dynamic_select</span> <span class="k">do</span>
  <span class="n">get</span> <span class="s1">':country_id/states'</span><span class="p">,</span> <span class="ss">to: </span><span class="s1">'states#index'</span><span class="p">,</span> <span class="ss">as: </span><span class="s1">'states'</span>
<span class="k">end</span>
<span class="o">...</span></code></pre></figure>

<p>And this is how my controller looks:</p>

<blockquote>
  <p>app/controllers/dynamic_select/states_controller.rb</p>
</blockquote>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">module</span> <span class="nn">DynamicSelect</span>
  <span class="k">class</span> <span class="nc">StatesController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
    <span class="n">respond_to</span> <span class="ss">:json</span>

    <span class="k">def</span> <span class="nf">index</span>
      <span class="vi">@states</span> <span class="o">=</span> <span class="no">State</span><span class="p">.</span><span class="nf">where</span><span class="p">(</span><span class="ss">:country_id</span> <span class="o">=&gt;</span> <span class="n">params</span><span class="p">[</span><span class="ss">:country_id</span><span class="p">])</span>
      <span class="n">respond_with</span><span class="p">(</span><span class="vi">@states</span><span class="p">)</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span></code></pre></figure>

<p>And this is a template of <em>index action</em>:</p>

<blockquote>
  <p>app/views/dynamic_select/states/index.json.jbuilder</p>
</blockquote>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">json</span><span class="p">.</span><span class="nf">array!</span><span class="p">(</span><span class="vi">@states</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">state</span><span class="o">|</span>
  <span class="n">json</span><span class="p">.</span><span class="nf">extract!</span> <span class="n">state</span><span class="p">,</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:id</span>
<span class="k">end</span></code></pre></figure>

<p>Returned JSON data from server should not include root elements:</p>

<blockquote>
  <p>config/intializers/wrap_parameters.rb</p>
</blockquote>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="o">...</span>
<span class="no">ActiveSupport</span><span class="p">.</span><span class="nf">on_load</span><span class="p">(</span><span class="ss">:active_record</span><span class="p">)</span> <span class="k">do</span>
 <span class="nb">self</span><span class="p">.</span><span class="nf">include_root_in_json</span> <span class="o">=</span> <span class="kp">false</span>
<span class="k">end</span></code></pre></figure>

<p>And the last thing which I should focus on is a form:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="o">&lt;</span><span class="n">div</span> <span class="k">class</span><span class="o">=</span><span class="s2">"field"</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="sx">%= f.label :country_id %&gt;&lt;br&gt;
  &lt;%=</span> <span class="n">f</span><span class="p">.</span><span class="nf">collection_select</span> <span class="ss">:country_id</span><span class="p">,</span> <span class="no">Country</span><span class="p">.</span><span class="nf">all</span><span class="p">,</span> <span class="ss">:id</span><span class="p">,</span> <span class="ss">:name</span><span class="p">,</span>
      <span class="p">{</span><span class="ss">include_blank: </span><span class="kp">true</span><span class="p">},</span>
      <span class="p">{</span> <span class="ss">data: </span><span class="p">{</span>
          <span class="ss">dynamic_selectable_url: </span><span class="n">dynamic_select_states_path</span><span class="p">(</span><span class="s1">':country_id'</span><span class="p">),</span>
          <span class="ss">dynamic_selectable_target: </span><span class="s1">'#event_state_id'</span>
        <span class="p">}</span>
      <span class="p">}</span> <span class="o">%&gt;</span>
<span class="o">&lt;</span><span class="sr">/div&gt;
&lt;div class="field"&gt;
  &lt;%= f.label :state_id %&gt;&lt;br&gt;
  &lt;%= f.collection_select :state_id, @event.country.try(:states) || [], :id, :name, :include_blank =&gt; true  %&gt;
&lt;/</span><span class="n">div</span><span class="o">&gt;</span></code></pre></figure>

<p>Check out the <a href="https://github.com/railsguides/dynamic-selectable-demo">code on github</a> and the live <a href="http://afternoon-lake-2182.herokuapp.com/events/new">demo here</a>.</p>

<p>If you have any proposals concerning this solution or if you have spotted any typo, bug, inconsistency or lacks feel free to contact with me.</p>
:ET