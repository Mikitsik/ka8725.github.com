I"%<p>Rails helper <code class="highlighter-rouge">link_to</code> is the most famous and used any Rails developer. Usually the first argument is a link name and the second is a parameters which are used to build url. You are able to pass 4 types of these parameters: helper which is generated by routes, string, hash and since rails 3 - record. But when and which one to use for your task? This is an interesting question.</p>

<h2 id="url_for">url_for</h2>

<p>Passed to <code class="highlighter-rouge">link_to</code> parameters go to the <code class="highlighter-rouge">url_for</code> method. This method builds known url which is eventually passed to the <code class="highlighter-rouge">href</code> attribute of generated link. So to answer on this question we should answer on question what and when to pass to the <code class="highlighter-rouge">url_for</code>.</p>

<p>As I’ve already said <code class="highlighter-rouge">url_for</code> accepts 4 types of parameters and see how it’s possible to pass them there:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">url_for</span><span class="p">(</span><span class="s2">"/events/</span><span class="si">#{</span><span class="vi">@event</span><span class="p">.</span><span class="nf">id</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span> <span class="c1"># string</span>
<span class="n">url_for</span><span class="p">(</span><span class="n">event_path</span><span class="p">(</span><span class="vi">@event</span><span class="p">))</span> <span class="c1"># generated helper</span>
<span class="n">url_for</span><span class="p">(</span><span class="ss">controller: </span><span class="s1">'events'</span><span class="p">,</span> <span class="ss">action: </span><span class="s1">'show'</span><span class="p">,</span> <span class="ss">id: </span><span class="vi">@event</span><span class="p">.</span><span class="nf">id</span><span class="p">)</span> <span class="c1"># hash</span>
<span class="n">url_for</span><span class="p">(</span><span class="vi">@event</span><span class="p">)</span> <span class="c1"># polymorphic</span></code></pre></figure>

<p>All there calls of <code class="highlighter-rouge">url_for</code> generate the same result <code class="highlighter-rouge">/events/:id</code>, for example <code class="highlighter-rouge">/events/1</code>.</p>

<p>The most convenient seems the last call - you just pass <code class="highlighter-rouge">@event</code> record and that’s it. There is no any brainstorming or surfing generated routes with <code class="highlighter-rouge">rake routes</code> task (this task shows all available routes for your Rails application, run it if you still hadn’t done this yet). It really convenient not only that’s why but it will be useful when you change controller or route which serves the event. You won’t have to change all your entire code in Rails application where you used old route helpers or string urls, hashes and so on.</p>

<p>The most complicated seems the hash variant. It looks the biggest and there is no doubt that why it is silently deprecated by Rails community. Rails developers avoid to using it at all. The reason is not only in this reason but in one more which I will tell you in a few seconds.</p>

<p>There is no any rule which method of proposed to use and of course you are not restricted to use any of these call types.</p>

<p>But let’s see what is their speed. I wrote the benchmarking test especially for this case:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">class</span> <span class="nc">EventsHelperTest</span> <span class="o">&lt;</span> <span class="no">ActionView</span><span class="o">::</span><span class="no">TestCase</span>
  <span class="k">def</span> <span class="nf">setup</span>
    <span class="n">country</span> <span class="o">=</span> <span class="no">Country</span><span class="p">.</span><span class="nf">create</span><span class="p">(</span><span class="ss">name: </span><span class="s1">'Belarus'</span><span class="p">)</span>
    <span class="n">state</span> <span class="o">=</span> <span class="no">State</span><span class="p">.</span><span class="nf">create</span><span class="p">(</span><span class="ss">name: </span><span class="s1">'Minsk'</span><span class="p">)</span>
    <span class="vi">@event</span> <span class="o">=</span> <span class="no">Event</span><span class="p">.</span><span class="nf">create</span><span class="p">(</span><span class="ss">country: </span><span class="n">country</span><span class="p">,</span> <span class="ss">state: </span><span class="n">state</span><span class="p">,</span> <span class="ss">name: </span><span class="s1">'Drinking bear'</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">test_url_for</span>
    <span class="n">n</span> <span class="o">=</span> <span class="mi">10000</span>
    <span class="no">Benchmark</span><span class="p">.</span><span class="nf">bmbm</span> <span class="k">do</span> <span class="o">|</span><span class="n">x</span><span class="o">|</span>
      <span class="n">x</span><span class="p">.</span><span class="nf">report</span><span class="p">(</span><span class="s1">'string'</span><span class="p">)</span> <span class="p">{</span> <span class="n">n</span><span class="p">.</span><span class="nf">times</span> <span class="p">{</span> <span class="n">url_for</span><span class="p">(</span><span class="s2">"/events/</span><span class="si">#{</span><span class="vi">@event</span><span class="p">.</span><span class="nf">id</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span> <span class="p">}</span> <span class="p">}</span>
      <span class="n">x</span><span class="p">.</span><span class="nf">report</span><span class="p">(</span><span class="s1">'helper'</span><span class="p">)</span> <span class="p">{</span> <span class="n">n</span><span class="p">.</span><span class="nf">times</span> <span class="p">{</span> <span class="n">url_for</span><span class="p">(</span><span class="n">event_path</span><span class="p">(</span><span class="vi">@event</span><span class="p">))</span> <span class="p">}</span> <span class="p">}</span>
      <span class="n">x</span><span class="p">.</span><span class="nf">report</span><span class="p">(</span><span class="s1">'hash'</span><span class="p">)</span> <span class="p">{</span> <span class="n">n</span><span class="p">.</span><span class="nf">times</span> <span class="p">{</span> <span class="n">url_for</span><span class="p">(</span><span class="ss">controller: </span><span class="s1">'events'</span><span class="p">,</span> <span class="ss">action: </span><span class="s1">'show'</span><span class="p">,</span> <span class="ss">id: </span><span class="vi">@event</span><span class="p">.</span><span class="nf">id</span><span class="p">)</span> <span class="p">}</span> <span class="p">}</span>
      <span class="n">x</span><span class="p">.</span><span class="nf">report</span><span class="p">(</span><span class="s1">'polymorphic'</span><span class="p">)</span> <span class="p">{</span> <span class="n">n</span><span class="p">.</span><span class="nf">times</span> <span class="p">{</span> <span class="n">url_for</span><span class="p">(</span><span class="vi">@event</span><span class="p">)</span> <span class="p">}</span> <span class="p">}</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span></code></pre></figure>

<p>And these are results of their running:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rake test test/helpers/events_helper_test.rb
Run options: --seed 23668

# Running tests:

Rehearsal -----------------------------------------------
string        0.010000   0.000000   0.010000 (  0.019028)
helper        0.480000   0.010000   0.490000 (  0.498942)
hash          1.250000   0.000000   1.250000 (  1.253836)
polymorphic   0.920000   0.010000   0.930000 (  0.924670)
-------------------------------------- total: 2.680000sec

                  user     system      total        real
string        0.010000   0.000000   0.010000 (  0.013747)
helper        0.480000   0.000000   0.480000 (  0.478646)
hash          1.200000   0.000000   1.200000 (  1.200571)
polymorphic   0.890000   0.000000   0.890000 (  0.892464)
.

Finished tests in 5.542858s, 0.1804 tests/s, 0.0000 assertions/s.

1 tests, 0 assertions, 0 failures, 0 errors, 0 skips
</code></pre></div></div>

<p>As you see the slowest here is a hash style. And then polymorphic generating goes. Helper style on the 3rd place and it’s not surprise that string generating wins.</p>

<h2 id="conclusion">Conclusion</h2>

<p>For my opinion the most convenient style here is polymorphic. But it’s 2x slower than helper style. String style is the fastest but we can’t use it because if you change your routes your tests may not show you that there is an error in generating routes - string will be generated as before but helper method won’t be presented and page will fail that’s why.</p>

<p>So my conclusion is to use helper methods everywhere where it’s possible. If you have some place in your application where you have to define which helper to use by record type or any other sign the polymorphic way is more preferable.</p>

<p>And the last conclusion - avoid using hash types of generating url at all.</p>
:ET