I"r<p>Have you ever felt annoying in formatting of hash keys/values in Ruby code? So have I. And I’m going to describe
how to improve it in this post.</p>

<h2 id="variants-of-using">Variants of using</h2>

<p>Asume we have to write some method <em>build_location</em> which receives hash object with a lot of default parameters. So
in this case we have a few variants how to format this peace of code:</p>

<ul>
  <li><em>Inline</em> (1)</li>
</ul>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">build_location</span><span class="p">(</span><span class="n">params</span> <span class="o">=</span> <span class="p">{</span><span class="ss">:first_name</span> <span class="o">=&gt;</span> <span class="s1">'FirstName'</span><span class="p">,</span> <span class="ss">:last_name</span> <span class="o">=&gt;</span> <span class="s1">'LastName'</span><span class="p">,</span> <span class="ss">:address</span> <span class="o">=&gt;</span> <span class="s1">'DefaultValue'</span><span class="p">,</span> <span class="ss">:phone</span> <span class="o">=&gt;</span> <span class="s1">'PhoneNumber'</span><span class="p">,</span> <span class="o">...</span><span class="p">})</span>
<span class="o">...</span>
<span class="k">end</span></code></pre></figure>

<ul>
  <li><em>Pure blocks</em> (2)</li>
</ul>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">build_location</span><span class="p">(</span><span class="n">params</span> <span class="o">=</span> <span class="p">{</span><span class="ss">:first_name</span> <span class="o">=&gt;</span> <span class="s1">'FirstName'</span><span class="p">,</span>
                             <span class="ss">:last_name</span>  <span class="o">=&gt;</span> <span class="s1">'LastName'</span><span class="p">,</span>
                             <span class="ss">:address</span>    <span class="o">=&gt;</span> <span class="s1">'DefaultValue'</span><span class="p">,</span>
                             <span class="ss">:phone</span>      <span class="o">=&gt;</span> <span class="s1">'PhoneNumber'</span><span class="p">,</span> <span class="o">...</span><span class="p">})</span>
<span class="o">...</span>
<span class="k">end</span></code></pre></figure>

<ul>
  <li><em>Using begin-end Pairs (Braces) to Designate Block Boundaries</em> (3)</li>
</ul>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">build_location</span><span class="p">(</span><span class="n">params</span> <span class="o">=</span> <span class="p">{</span>
    <span class="ss">:first_name</span> <span class="o">=&gt;</span> <span class="s1">'FirstName'</span><span class="p">,</span>
    <span class="ss">:last_name</span>  <span class="o">=&gt;</span> <span class="s1">'LastName'</span><span class="p">,</span>
    <span class="ss">:address</span>    <span class="o">=&gt;</span> <span class="s1">'DefaultValue'</span><span class="p">,</span>
    <span class="ss">:phone</span>      <span class="o">=&gt;</span> <span class="s1">'PhoneNumber'</span><span class="p">,</span> <span class="o">...</span>
<span class="p">})</span>
<span class="o">...</span>
<span class="k">end</span></code></pre></figure>

<h2 id="selection">Selection</h2>

<p>Block #1 seems disgusting, because we have infinite line of parameters. It is too difficult to find something in it and add new parameter.
Block #2 looks rather pretty, but if you want to change parameter name of add one you will have to format them again. So this code is too
difficult to support also. So my choose is <strong>#3</strong>.</p>

<h2 id="the-best-one">The best one</h2>

<p>In block <strong>#3</strong> we have easy supported code, if we change list of parameters or change name we won’t have to change anything with hash parameters.
Code like this I will chose not only for styling method parameters but for any place in code where I have hash with list of many parameters.
To confirm this assertion let’s try to change name of parameter and add new:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">build_location</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">this_is_default_params</span> <span class="o">=</span> <span class="p">{</span>
    <span class="ss">:first_name</span> <span class="o">=&gt;</span> <span class="s1">'FirstName'</span><span class="p">,</span>
    <span class="ss">:last_name</span>  <span class="o">=&gt;</span> <span class="s1">'LastName'</span><span class="p">,</span>
    <span class="ss">:address</span>    <span class="o">=&gt;</span> <span class="s1">'DefaultValue'</span><span class="p">,</span>
    <span class="ss">:phone</span>      <span class="o">=&gt;</span> <span class="s1">'PhoneNumber'</span><span class="p">,</span> <span class="o">...</span>
<span class="p">})</span>
<span class="o">...</span>
<span class="k">end</span></code></pre></figure>

<p>As you can see I’ve changed only that what I wanted without any regression issues for formatting my code.</p>

<h1 id="additional-resources">Additional resources</h1>

<p>A lot of code examples for this theme you can find in book <a href="http://www.amazon.com/Code-Complete-ebook/dp/B004OR1XGK/ref=sr_1_7?ie=UTF8&amp;qid=1341409481&amp;sr=8-7&amp;keywords=code+complete+2">Code Complete, second edition</a> by Steve McConnel.
This is a huge book, but it is very interesting, important, and contains a lot of advices for coding. Also it includes in list of books <a href="http://stackoverflow.com/questions/1711/what-is-the-single-most-influential-book-every-programmer-should-read">which must read every programmer</a>. Thank you, Steve, for your hard work!</p>
<dl class="figure">
	<img src="/images/code_complete.jpg" alt="Code Complete, second edition. By Steve McConell" />&lt;/img&gt;
</dl>
:ET